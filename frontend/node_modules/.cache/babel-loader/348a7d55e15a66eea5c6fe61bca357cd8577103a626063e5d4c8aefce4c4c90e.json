{"ast":null,"code":"class Api {\n  constructor(baseUrl) {\n    this._baseUrl = baseUrl;\n  }\n  _getResponseData(response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      return Promise.reject(`Ошибка ${response.status}`);\n    }\n  }\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"content-type\": 'application/json; charset=UTF-8'\n      }\n      // credentials: 'include',\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  addCard(card) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      // credentials: 'include',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"content-type\": 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      // credentials: 'include',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"content-type\": 'application/json; charset=UTF-8'\n      }\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  editUserInfo(userData) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      // credentials: 'include',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"content-type\": 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.about\n      })\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  deleteCard(cardId) {\n    console.log(cardId);\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      // credentials: 'include',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"content-type\": 'application/json; charset=UTF-8'\n      }\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    console.log(cardId, isLiked);\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: !isLiked ? 'PUT' : 'DELETE',\n      // credentials: 'include',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"content-type\": 'application/json; charset=UTF-8'\n      }\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  editAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      // credentials: 'include',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"content-type\": 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  getInitialInfo() {\n    return Promise.all([this.getUserInfo(), this.getCards()]);\n  }\n}\nconst api = new Api('http://127.0.0.1:4000');\nexport default api;","map":{"version":3,"names":["Api","constructor","baseUrl","_baseUrl","_getResponseData","response","ok","json","Promise","reject","status","getCards","fetch","headers","authorization","localStorage","getItem","then","addCard","card","method","body","JSON","stringify","name","link","getUserInfo","editUserInfo","userData","about","deleteCard","cardId","console","log","changeLikeCardStatus","isLiked","editAvatar","data","avatar","getInitialInfo","all","api"],"sources":["D:/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["\r\nclass Api {\r\n    constructor (baseUrl) {\r\n        this._baseUrl = baseUrl;\r\n    }\r\n\r\n    _getResponseData (response) {\r\n        if(response.ok) {\r\n            return response.json()\r\n        } else {\r\n            return Promise.reject(`Ошибка ${response.status}`)\r\n        }\r\n    }\r\n\r\n    getCards () {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                \"content-type\": 'application/json; charset=UTF-8'\r\n            },\r\n            // credentials: 'include',\r\n        })\r\n        .then(response => {\r\n            return this._getResponseData(response);\r\n        })\r\n    }\r\n\r\n    addCard(card){\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            // credentials: 'include',\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                \"content-type\": 'application/json; charset=UTF-8'\r\n            },\r\n            body: JSON.stringify({\r\n                name: card.name,\r\n                link: card.link\r\n            })\r\n        })\r\n        .then(response => {\r\n            return this._getResponseData(response);\r\n        })\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch (`${this._baseUrl}/users/me`, {\r\n            // credentials: 'include',\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                \"content-type\": 'application/json; charset=UTF-8'\r\n            },\r\n        })\r\n        .then((response) => {\r\n            return this._getResponseData(response);\r\n        })\r\n    }\r\n\r\n    editUserInfo(userData) {\r\n        return fetch (`${this._baseUrl}/users/me`, {\r\n            method: \"PATCH\",\r\n            // credentials: 'include',\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                \"content-type\": 'application/json; charset=UTF-8'\r\n            },\r\n            body: JSON.stringify({\r\n                name: userData.name,\r\n                about: userData.about\r\n            })\r\n        })\r\n        .then(response => {\r\n            return this._getResponseData(response);\r\n        })\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        console.log(cardId)\r\n        return fetch (`${this._baseUrl}/cards/${cardId}`, {\r\n            method: \"DELETE\",\r\n            // credentials: 'include',\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                \"content-type\": 'application/json; charset=UTF-8'\r\n            },\r\n        })\r\n        .then(response => {\r\n            return this._getResponseData(response);\r\n        })\r\n    }\r\n\r\n    changeLikeCardStatus (cardId, isLiked) {\r\n        console.log(cardId, isLiked)\r\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n            method: !isLiked ? 'PUT' : 'DELETE',\r\n            // credentials: 'include',\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                \"content-type\": 'application/json; charset=UTF-8'\r\n            },\r\n        }).then(response => {\r\n            return this._getResponseData(response);\r\n        })\r\n    }\r\n\r\n    editAvatar (data) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            method: \"PATCH\",\r\n            // credentials: 'include',\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                \"content-type\": 'application/json; charset=UTF-8'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: data.avatar\r\n            })\r\n        })\r\n        .then(response => {\r\n            return this._getResponseData(response);\r\n        })\r\n    }\r\n\r\n    getInitialInfo() {\r\n        return Promise.all([this.getUserInfo(), this.getCards()]);\r\n    }\r\n}\r\n\r\n\r\nconst api = new Api('http://127.0.0.1:4000');\r\n\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}