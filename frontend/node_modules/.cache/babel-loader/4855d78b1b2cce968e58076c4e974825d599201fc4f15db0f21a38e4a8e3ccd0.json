{"ast":null,"code":"const BASE_URL = 'http://127.0.0.1:4000';\nexport const register = (email, password) => {\n  console.log();\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    console.log(res);\n    if (res.ok) {\n      return res.json();\n    } else {\n      console.log(res.status);\n    }\n  }).then(res => {\n    return res;\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    } else {\n      console.log(res.status);\n    }\n  }).then(data => {\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      return data;\n    } else {\n      return;\n    }\n  });\n};\nexport const getToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'authorization': `Bearer ${token}`\n    }\n  }).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    } else {\n      console.log(res.status);\n    }\n  }).then(data => {\n    return data;\n  });\n};","map":{"version":3,"names":["BASE_URL","register","email","password","console","log","fetch","method","headers","body","JSON","stringify","then","res","ok","json","status","authorize","data","token","localStorage","setItem","getToken"],"sources":["D:/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["\r\nconst BASE_URL = 'http://127.0.0.1:4000';\r\n\r\nexport const register = (email, password) => {\r\n    console.log()\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            password,\r\n            email\r\n        })\r\n    }).then(res => {\r\n        console.log(res)\r\n        if(res.ok) {\r\n            return res.json();\r\n        } else {\r\n            console.log(res.status)\r\n        }\r\n    }).then(res => {\r\n        return res;\r\n    })\r\n}\r\n\r\nexport const authorize = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            password,\r\n            email\r\n        })\r\n    }).then(res => {\r\n        if(res.status === 200) {\r\n            return res.json();\r\n        } else {\r\n            console.log(res.status)\r\n        }\r\n    }).then(data => {\r\n        if (data.token) {\r\n            localStorage.setItem('token', data.token);\r\n            return data;\r\n        } else {\r\n            return;\r\n        }\r\n    })\r\n}\r\n\r\nexport const getToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'authorization': `Bearer ${token}`\r\n        }\r\n    }).then(res => {\r\n        if(res.status === 200) {\r\n            return res.json();\r\n        } else {\r\n            console.log(res.status)\r\n        }\r\n    }).then(data => {\r\n        return data;\r\n    })\r\n}\r\n"],"mappings":"AACA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACzCC,OAAO,CAACC,GAAG,CAAC,CAAC;EACb,OAAOC,KAAK,CAAE,GAAEN,QAAS,SAAQ,EAAE;IAC/BO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBR,QAAQ;MACRD;IACJ,CAAC;EACL,CAAC,CAAC,CAACU,IAAI,CAACC,GAAG,IAAI;IACXT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;IAChB,IAAGA,GAAG,CAACC,EAAE,EAAE;MACP,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACrB,CAAC,MAAM;MACHX,OAAO,CAACC,GAAG,CAACQ,GAAG,CAACG,MAAM,CAAC;IAC3B;EACJ,CAAC,CAAC,CAACJ,IAAI,CAACC,GAAG,IAAI;IACX,OAAOA,GAAG;EACd,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMI,SAAS,GAAGA,CAACf,KAAK,EAAEC,QAAQ,KAAK;EAC1C,OAAOG,KAAK,CAAE,GAAEN,QAAS,SAAQ,EAAE;IAC/BO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBR,QAAQ;MACRD;IACJ,CAAC;EACL,CAAC,CAAC,CAACU,IAAI,CAACC,GAAG,IAAI;IACX,IAAGA,GAAG,CAACG,MAAM,KAAK,GAAG,EAAE;MACnB,OAAOH,GAAG,CAACE,IAAI,CAAC,CAAC;IACrB,CAAC,MAAM;MACHX,OAAO,CAACC,GAAG,CAACQ,GAAG,CAACG,MAAM,CAAC;IAC3B;EACJ,CAAC,CAAC,CAACJ,IAAI,CAACM,IAAI,IAAI;IACZ,IAAIA,IAAI,CAACC,KAAK,EAAE;MACZC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACC,KAAK,CAAC;MACzC,OAAOD,IAAI;IACf,CAAC,MAAM;MACH;IACJ;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAIH,KAAK,IAAK;EAC/B,OAAOb,KAAK,CAAE,GAAEN,QAAS,WAAU,EAAE;IACjCO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASW,KAAM;IACrC;EACJ,CAAC,CAAC,CAACP,IAAI,CAACC,GAAG,IAAI;IACX,IAAGA,GAAG,CAACG,MAAM,KAAK,GAAG,EAAE;MACnB,OAAOH,GAAG,CAACE,IAAI,CAAC,CAAC;IACrB,CAAC,MAAM;MACHX,OAAO,CAACC,GAAG,CAACQ,GAAG,CAACG,MAAM,CAAC;IAC3B;EACJ,CAAC,CAAC,CAACJ,IAAI,CAACM,IAAI,IAAI;IACZ,OAAOA,IAAI;EACf,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}